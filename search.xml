<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>顺序栈的基本操作</title>
      <link href="/posts/60585/"/>
      <url>/posts/60585/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="顺序栈的基本操作"><a href="#顺序栈的基本操作" class="headerlink" title="顺序栈的基本操作"></a>顺序栈的基本操作</h3><p>通过菜单调用各个操作，测试点：</p><ul><li>没有初始化前进行其他操作，程序是否能控制住；<ul><li>初始化一个栈；</li><li>判栈空，屏幕显示栈为空；</li><li>3个数入栈， 1、2、3；</li><li>栈长度，屏幕输出3；</li><li>取栈顶元素，再判栈空，然后再判栈长度。让学生知道取栈顶元素不改变栈中的内容，栈顶指针不发生改变；</li><li>出栈，再判栈长度；</li><li>销毁栈，再做其他操作，判断程序是否能控制；</li><li>数制转换，输入：8，输出：1000</li></ul></li></ul><h3 id="问题分析："><a href="#问题分析：" class="headerlink" title="问题分析："></a>问题分析：</h3><p>栈是将插入和删除集中在一端进行的线性结构，表尾端称为栈顶，表头端称为栈底，不含元素的栈称为空栈。</p><p>顺序栈是指利用顺序存储结构实现的栈，利用一组地址连续的存储单元依次存放自栈底到栈顶的数据元素，用指针top指向栈顶元素所在位置的下一位。</p><p>顺序栈有以下基本操作：初始化栈、销毁栈、将栈置空、入栈、出栈、判断栈是否为空、删除栈顶元素、求栈的长度、输出栈内元素、创建并初始化栈。</p><h3 id="算法思想："><a href="#算法思想：" class="headerlink" title="算法思想："></a>算法思想：</h3><p>栈底指针base始终指向栈底的位置，当base的值为NULL时，百世栈不存在；top为栈顶指针，其初值指向栈底，每当元素入栈时，top指针加1，删除栈顶元素时，top指针减1；当栈为空时，top和base的值相等，都指向栈底；栈非空时，top始终指向栈顶元素的上一个位置。</p><p>数制转换的算法思想：<br>将十进制数转换为n进制数，可每次将数除n的余数入栈，然后数除以n，直到该数变为0，再讲栈内元素输出，即可得到转换为n进制后的数。</p><h3 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXSIZE 100</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> SElemType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    SElemType *base;</span><br><span class="line">    SElemType *top;</span><br><span class="line">    <span class="keyword">int</span> stacksize;</span><br><span class="line">&#125;SqStack;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化栈</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">InitStack</span><span class="params">(SqStack&amp;S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    S.base=<span class="keyword">new</span> SElemType[MAXSIZE];</span><br><span class="line">    S.top=S.base;</span><br><span class="line">    S.stacksize=MAXSIZE;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//判断栈是否为空</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">StackEmpty</span><span class="params">(SqStack S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(S.top==S.base) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//求顺序栈的长度</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">StackLength</span><span class="params">(SqStack S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> S.top-S.base;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//清空顺序栈</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ClearStack</span><span class="params">(SqStack &amp;S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(S.base) S.top=S.base;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//销毁顺序栈</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">DestroyStack</span><span class="params">(SqStack &amp;S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(S.base)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">delete</span>[]S.base;</span><br><span class="line">        S.stacksize=<span class="number">0</span>;</span><br><span class="line">        S.base=S.top=<span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//入栈</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Push</span><span class="params">(SqStack &amp;S,SElemType e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(S.top-S.base==S.stacksize)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    *S.top++=e;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//出栈</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Pop</span><span class="params">(SqStack &amp;S,SElemType&amp;e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(S.top==S.base)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    e=*--S.top;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//取栈顶元素</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">GetTop</span><span class="params">(SqStack S,SElemType&amp;e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(S.top==S.base) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    e=*(S.top<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出栈内元素</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(SqStack S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(S.top!=S.base)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;*(S.top<span class="number">-1</span>);</span><br><span class="line">        S.top--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建并输入栈元素</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BulidStack</span><span class="params">(SqStack &amp;S,<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(n--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;*S.top;</span><br><span class="line">        S.top++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出提示信息</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">welcome</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"****************"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"1.初始化为空栈"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"2.销毁栈"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"3.将栈置空"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"4.判断栈是否为空栈"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"5.返回栈的长度"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"6.求栈顶元素"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"7.插入元素，并使其成为栈顶元素"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"8.删除栈顶元素，并返回其值"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"9.输出栈内元素"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"10.创建并输入栈元素"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"11.退出"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"12.运行数字转换程序"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"****************"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">IsLegal</span><span class="params">(SqStack S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">abs</span>(S.top-S.base)&gt;MAXSIZE)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(!S.base)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    SqStack S;</span><br><span class="line">    SElemType e;</span><br><span class="line">    <span class="keyword">int</span> n,mes;</span><br><span class="line"><span class="comment">//    cout&lt;&lt;*S.top&lt;&lt;" "&lt;&lt;*S.base;</span></span><br><span class="line"><span class="comment">//    return 0;</span></span><br><span class="line">    welcome();</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入你的选择&gt;&gt;"</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">switch</span>(n)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            mes=InitStack(S);</span><br><span class="line">            <span class="keyword">if</span>(mes)</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"初始化成功！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">if</span>(!IsLegal(S))&#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"栈未初始化！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            mes=DestroyStack(S);</span><br><span class="line">            <span class="keyword">if</span>(mes)</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"销毁成功！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            <span class="keyword">if</span>(!IsLegal(S))&#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"栈未初始化！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            mes=ClearStack(S);</span><br><span class="line">            <span class="keyword">if</span>(mes)</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"栈已置空！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            <span class="keyword">if</span>(!IsLegal(S))&#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"栈未初始化！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(StackEmpty(S))</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"栈为空！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"非空！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            <span class="keyword">if</span>(!IsLegal(S))&#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"栈未初始化！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            mes=StackLength(S);</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"栈的长度为："</span>&lt;&lt;mes&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            <span class="keyword">if</span>(!IsLegal(S))&#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"栈未初始化！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            mes=GetTop(S,e);</span><br><span class="line">            <span class="keyword">if</span>(mes)</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"栈顶元素为："</span>&lt;&lt;e&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"操作失败！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            <span class="keyword">if</span>(!IsLegal(S))&#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"栈未初始化！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入一个元素："</span>;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;e;</span><br><span class="line">            mes=Push(S,e);</span><br><span class="line">            <span class="keyword">if</span>(mes)</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"入栈成功！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"操作失败！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">            <span class="keyword">if</span>(!IsLegal(S))&#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"栈未初始化！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            mes=Pop(S,e);</span><br><span class="line">            <span class="keyword">if</span>(mes)</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"栈顶元素为："</span>&lt;&lt;e&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"操作失败！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">            <span class="keyword">if</span>(!IsLegal(S))&#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"栈未初始化！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            print(S);</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入要初始化的元素个数："</span>;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;mes;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入"</span>&lt;&lt;mes&lt;&lt;<span class="string">"个元素："</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            BulidStack(S,mes);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入要转换的数字："</span>;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;e;</span><br><span class="line">            InitStack(S);</span><br><span class="line">            <span class="keyword">while</span>(e)</span><br><span class="line">            &#123;</span><br><span class="line">                Push(S,e%<span class="number">2</span>);</span><br><span class="line">                e/=<span class="number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            print(S);</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"操作有误！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入你的选择&gt;&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210504121503802.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xwaDE5MTIwODAxMjI=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>    <img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210504121512207.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xwaDE5MTIwODAxMjI=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210504121526447.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xwaDE5MTIwODAxMjI=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>HDFS常用操作命令</title>
      <link href="/posts/4768/"/>
      <url>/posts/4768/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="HDFS-Shell-实践"><a href="#HDFS-Shell-实践" class="headerlink" title="HDFS Shell 实践"></a>HDFS Shell 实践</h3><p>（1）    列举一个目录的所有文件<br> <img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210512124756634.png" alt="在这里插入图片描述"><br>（2）    创建文件夹<br> <img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210512124812898.png" alt="在这里插入图片描述"></p><p>（3）    将本地文件上传至HDFS<br>    <img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210512124848493.png" alt="在这里插入图片描述">)<img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210512124856203.png" alt="在这里插入图片描述"><br>（4）    将本地文件从HDFS下载到本地文件系统<br>  <img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210512124933453.png" alt="在这里插入图片描述"><br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/2021051212493951.png" alt="在这里插入图片描述"></p><p>（5）    查看文件内容<br> <img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210512124945860.png" alt="在这里插入图片描述"></p><p>（6）    删除文件或者文件夹</p><p> <img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210512124951672.png" alt="在这里插入图片描述"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Spark的安装部署</title>
      <link href="/posts/23767/"/>
      <url>/posts/23767/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>1.将安装包拖入到Linux虚拟机的桌面，然后进入桌面所在的文件路径，使用如下命令对Spark进行解压和重命名等操作<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210512131642384.png" alt="在这里插入图片描述">)<img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/2021051213165020.png" alt="在这里插入图片描述"></p><ol start="2"><li>通过如下Linux命令进入Spark解压文件中的conf文件夹，并根据Spark自带的模板创建spark-env.sh配置文件</li></ol><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210512131701736.png" alt="在这里插入图片描述"><br> 3. 通过在Linux终端使用命令“vim spark-env.sh”修改配置文件spark-env.sh。在配置文件的空白处，添加如下内容,换成自己的路径<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210512131853188.png" alt="在这里插入图片描述">)<img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210512131857693.png" alt="在这里插入图片描述"><br>4. 在spark-env.sh修改完成之后，我们进一步配置Spark的环境变量。使用如下命令打开当前用户根目录下的配置文件<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210512132029867.png" alt="在这里插入图片描述">)<img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210512132033891.png" alt="在这里插入图片描述"><br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210512132037749.png" alt="在这里插入图片描述"><br>5.在Linux终端通过如下命令来启动Spark，并查看Master和Worker进程是否启动<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210512132046748.png" alt="在这里插入图片描述">)<img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210512132053512.png" alt="在这里插入图片描述"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Spark基本原理总结</title>
      <link href="/posts/25818/"/>
      <url>/posts/25818/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="Spark概述"><a href="#Spark概述" class="headerlink" title="Spark概述"></a>Spark概述</h1><p>Spark由AMP实验室与2009年开发，有以下四个特点：</p><ul><li>运行速度快<br>使用有向无环图（DAG）执行引擎，基于内存速度比Hadoop 快百倍，基于磁盘速度快10倍</li><li>容易使用<br>支持Scala、Java、Python、R</li><li>通用性<br>提供强大完整的技术栈：SQL查询、流式计算、机器学习、图算法等</li><li>运行模式多样<h1 id="Scala简介"><a href="#Scala简介" class="headerlink" title="Scala简介"></a>Scala简介</h1>一门现代的多范式编程语言，运行于JVM，兼容Java<br>具有以下优点：</li><li>强大的并发性，支持函数式编程，更好支持分布式系统</li><li>语法简洁，API易用</li><li>兼容Java，速度快，融入到Hadoop生态圈<h1 id="Spark与Hadoop的对比"><a href="#Spark与Hadoop的对比" class="headerlink" title="Spark与Hadoop的对比"></a>Spark与Hadoop的对比</h1>Hadoop的缺点：表达能力有限、磁盘IO开销大、延迟高</li></ul><p>Spark的优点：编程模型更灵活、更高的迭代运算效率、基于DAG的任务调度执行机制、更有的迭代执行机制</p><p>Spark生态系统：Spark Core、Spark SQL、MLlib、GraphX</p><h1 id="Spark运行架构"><a href="#Spark运行架构" class="headerlink" title="Spark运行架构"></a>Spark运行架构</h1><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><ul><li>RDD：弹性分布式数据集，提供一种高度受限的共享内存模型</li><li>DAG：有向无环图，反映RDD之间的依赖关系</li><li>Executor:运行在工作节点（Worker Node）的一个进程，运行任务并存储数据<h2 id="架构设计"><a href="#架构设计" class="headerlink" title="架构设计"></a>架构设计</h2>Spark包括集群资源管理器、工作节点、任务控制节点、执行进程，关系如下：<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210512132621907.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xwaDE5MTIwODAxMjI=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>Executor的优点：利用多线程执行任务，减少启动开销；包含BlockManager存储模块，将内存和磁盘共同作为存储设备，减少IO开销<h2 id="Spark运行基本流程"><a href="#Spark运行基本流程" class="headerlink" title="Spark运行基本流程"></a>Spark运行基本流程</h2><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/2021051213265155.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xwaDE5MTIwODAxMjI=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><h2 id="RDD的设计与运行原理"><a href="#RDD的设计与运行原理" class="headerlink" title="RDD的设计与运行原理"></a>RDD的设计与运行原理</h2><h3 id="RDD概念"><a href="#RDD概念" class="headerlink" title="RDD概念"></a>RDD概念</h3>弹性分布式数据集，Spark所定义的一种抽象数据类型，是对Spark中的一个只读数据集合的逻辑描述</li></ul><p>分装了Spark数据集合的分区列表、分区在集群中的位置、与其他RDD的衍生关系及对数据集合的相关操作，但不包含数据集合的具体数据。</p><p>只能通过来自HDFS、Hbase等数据源的数据进行创建或通过对其他RDD计算得到</p><h3 id="RDD主要属性"><a href="#RDD主要属性" class="headerlink" title="RDD主要属性"></a>RDD主要属性</h3><h4 id="1-数据的分区列表"><a href="#1-数据的分区列表" class="headerlink" title="1.数据的分区列表"></a>1.数据的分区列表</h4><p>每个分区对应集群中的一个物理数据块，可以由一个单独的节点进行处理，分区是Spark计算的基本单元，分区的大小决定了Spark的计算粒度。</p><p>用户可在创建RDD时指定RDD的分区个数，默认为程序所分配到的CPU Core的数目。</p><h4 id="2-计算每个分区的函数"><a href="#2-计算每个分区的函数" class="headerlink" title="2.计算每个分区的函数"></a>2.计算每个分区的函数</h4><p>RDD只能通过数据源创建或通过其他RDD转换的到<br>计算函数记录了RDD在转换过程中对父RDD所做的操作</p><p>如果RDD是通过已有的文件系统构建，则计算函数读取指定文件系统中的数据</p><h4 id="3-与其他RDD之间的依赖"><a href="#3-与其他RDD之间的依赖" class="headerlink" title="3.与其他RDD之间的依赖"></a>3.与其他RDD之间的依赖</h4><p>RDD每次转换会生成一个新的RDD，RDD之间的关系类似于流水线的前后衍生血缘关系</p><p>RDD通过记录自己与其他RDD之间的血缘依赖关系，在部分数据丢失时，可以通过重新计算来回复丢失的分区</p><h4 id="4-优先列表位置"><a href="#4-优先列表位置" class="headerlink" title="4.优先列表位置"></a>4.优先列表位置</h4><p>记录了每个分区的优先位置<br>通过HDFS的数据来建立RDD时，这个列表保存的就是每个分区对应的数据块的位置<br>移动数据不如移动计算，Spark进行任务调度时，会尽可能将计算任务分配到所要处理的数据块的存储位置</p><h4 id="5-分区策略"><a href="#5-分区策略" class="headerlink" title="5.分区策略"></a>5.分区策略</h4><p>RDD的分区函数<br>分区函数决定RDD分区的个数</p><h4 id="6-RDD的两类操作"><a href="#6-RDD的两类操作" class="headerlink" title="6.RDD的两类操作"></a>6.RDD的两类操作</h4><ul><li>转换操作<br>由一个RDD经过操作得到一个新的RDD<br>转换操作在Spark中都是惰性的，Spark遇到这类操作时不会立即执行<br>新生成的RDD会记录转换的相关信息。</li><li>动作操作<br>动作操作一般用于向Driver进程返回结果或者写入结果到文件中。这些操作都封装在RDD抽象数据类型中，可以通过RDD对象的方法调用来使用这些方法。<br>会触发一次Spark中一次Job作业的提交。<br>Spark会根据前面记住的RDD转换过程及RDD之间的衍生关系，建立RDD有向无环图DAG，然后将DAG划分为不同的阶段，产生具体的任务集合，建立RDD有向无环图DAG，然后将DAG划分为不同的阶段，产生具体的任务集合，并将具体的任务分发给不同的Executor去执行。<h4 id="6-RDD的常见转换操作"><a href="#6-RDD的常见转换操作" class="headerlink" title="6.RDD的常见转换操作"></a>6.RDD的常见转换操作</h4>Map操作：将输入的RDD中的每个元素，根据map函数中传递进来的func函数进行处理，输入的RDD有多少个分区，输出RDD也有多少个分区。</li></ul><p>flatMap操作：根据传递的func函数对输入RDD的每个元素进行处理。需要将各个元素的处理结果进行扁平化处理，即将各个元素的处理结果合并成一个集合。</p><p>Union操作：将两个RDD中的元素进行合并，形成一个新的RDD，要求进行合并操作的两个RDD中元素的数据类型相同。</p><p>fliter操作：根据传递进来的func函数对输入RDD中的数据进行过滤。传递进来的func函数的输出值为true或者false的布尔值。应用输入函数对输入RDD中的每个元素进行处理，结果为true的元素将被保留</p><p>distinct操作：将输入RDD中的元素进行去重处理，也就是将输入RDD中重复的元素去除。</p><p>groupByKey操作：groupByKey操作要求输入的RDD中的元素是&lt;key, value&gt;形式的数据，该操作将输入RDD中key相同的元素合并成一个&lt;key, Iterable&lt;value1, value2,value3&gt;&gt;形式的元素。</p><p>reduceByKey(func)操作： 要求输RDD中的元素具有&lt;key, value&gt;的形式。将输入RDD中具有相同key的元素的value值根据传递进来的func函数进行聚合处理。</p><p>Join操作：要求当前RDD和通过参数输入的RDD都是&lt;key, value&gt;形式的数据集合，将两个RDD下相同key值对应的value值聚合为一个集合。</p><p>持久化操作：通过持久化操作来保存中间操作的结果，持久化操作的具体操作函数有两个：persist和cache。</p><p>Reduce操作：当前RDD的元素从左至右根据传递进来的func函数进行两两运算，并将计算结果与RDD中的下一个元素进行相同的计算，直到遍历完RDD的所有元素。</p><p>Spark的map操作与MapReduce的map操作相同，但是Spark的reduce操作与MapReduce的reduce操作不同。 </p><h4 id="7-RDD的依赖关系"><a href="#7-RDD的依赖关系" class="headerlink" title="7.RDD的依赖关系"></a>7.RDD的依赖关系</h4><p>RDD操作中原RDD与目标RDD之间的父子血缘关系关系称为RDD之间的依赖关系。<br>RDD操作中原RDD与目标RDD之间的父子血缘关系关系称为RDD之间的依赖关系。</p><ul><li>窄依赖<br>父RDD的每一个分区最多被一个子RDD的分区所用。<br>一个父RDD的一个分区不可能对应一个子RDD的多个分区<ul><li>宽依赖<br>子RDD的分区依赖于父RDD的多个分区或所有分区。<br>存在一个父RDD的一个分区对应一个子RDD的多个分区<h4 id="8-RDD的容错机制："><a href="#8-RDD的容错机制：" class="headerlink" title="8.RDD的容错机制："></a>8.RDD的容错机制：</h4></li></ul></li><li>对于窄依赖来讲，在恢复子RDD中某个丢失的分区时，只需要找到其父RDD的对应分区，然后根据子RDD中记录的操作重新进行计算即可。</li><li>而对于宽依赖来说，恢复子RDD分区的容错处理机制则将重新计算父RDD的所有分区数据，相对于窄依赖中的容错处理过程来说将会产生冗余计算。</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hbase常用操作命令</title>
      <link href="/posts/63687/"/>
      <url>/posts/63687/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="（1）进入hbase-shell"><a href="#（1）进入hbase-shell" class="headerlink" title="（1）进入hbase shell"></a>（1）进入hbase shell</h1><p>在启动HDFS和Hbase之后，在Linux客户端输入“hbase shell”命令将进入Hbase Shell。<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210519182209742.png" alt="在这里插入图片描述"><br>打开Hbase Shell之后，首先输入“help”命令，Hbase Shell会显示Hbase所提供的所有Shell命令。<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/2021051918222171.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xwaDE5MTIwODAxMjI=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="（2）创建、查看、删除命名空间"><a href="#（2）创建、查看、删除命名空间" class="headerlink" title="（2）创建、查看、删除命名空间"></a>（2）创建、查看、删除命名空间</h1><p>建立一个test的命名空间<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210519182240467.png" alt="在这里插入图片描述"><br>可以通过如下describe命令来查看所建立的命名空间的详细信息<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210519182251272.png" alt="在这里插入图片描述"><br>我们也可以通过如下命令来查看当前Hbase中所有的命名空间<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210519182302738.png" alt="在这里插入图片描述"><br>通过如下命令来删除一个命名空间<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210519182314105.png" alt="在这里插入图片描述"></p><h1 id="（3）创建、查看、删除表以及使表有效和无效"><a href="#（3）创建、查看、删除表以及使表有效和无效" class="headerlink" title="（3）创建、查看、删除表以及使表有效和无效"></a>（3）创建、查看、删除表以及使表有效和无效</h1><p>建立一个usr_beha表，有两个列族，一个是beha，一个是attr，具体的命令如下，创建表时至少有一个列族<img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210519182333400.png" alt="在这里插入图片描述"><br>输入list命令就可以看到如下信息，显示usr_beha表已经创建。List命令显示当前Hbase中所有的表的信息<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210519182344919.png" alt="在这里插入图片描述"><br>输入describe ‘usr_beha’命令，就可以看到如下信息<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210519182400469.png" alt="在这里插入图片描述"><br>describe命令用于显示一个表的结构与设置信息<br>可以让我们看到关于一个表的一些默认的设置<br>关于列族的属性信息我们也可以在创建表时通过以下方式进行明确的设置<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/2021051918241074.png" alt="在这里插入图片描述">)<img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210519182420180.png" alt="在这里插入图片描述"><br>删除一个表使用drop命令，比如删除我们创建的usr_beha表，具体的命令格式如下：（需首先使用disable命令使该表失效）<img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210519182436696.png" alt="在这里插入图片描述"><br>在创建表时指定表所属的命名空间，则可以使用如下命令<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210519182447196.png" alt="在这里插入图片描述"><br>查看一个命名空间下的所有表格信息，可以使用如下命令<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210519182458493.png" alt="在这里插入图片描述"></p><h1 id="（4）添加、获取、删除单元格添中的数据"><a href="#（4）添加、获取、删除单元格添中的数据" class="headerlink" title="（4）添加、获取、删除单元格添中的数据"></a>（4）添加、获取、删除单元格添中的数据</h1><p>向表usr_beha中写入ID为38932423的用户张三的姓名<br>格式：put 表名，行键，列族，数据<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210519182518197.png" alt="在这里插入图片描述"><br>通过如下命令来查看刚刚写入的数据：<br>格式：get 表名，行键，列族<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210519182530664.png" alt="在这里插入图片描述"><br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210519182537646.png" alt="在这里插入图片描述"></p><p>通过scan命令来查看整个表的信息<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210519182547161.png" alt="在这里插入图片描述">)<img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210519182554130.png" alt="在这里插入图片描述"><br>删除上述单元格的数据，则可以使用delete命令<br>格式：delete 表名，行键，列族<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210519182607249.png" alt="在这里插入图片描述"></p><h1 id="（5）修改表的结构"><a href="#（5）修改表的结构" class="headerlink" title="（5）修改表的结构"></a>（5）修改表的结构</h1><p>在刚创建的表usr_beha中添加一个新的列族ecf1：<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210519182629759.png" alt="在这里插入图片描述"><br>删除一个表中的列族<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210519182638764.png" alt="在这里插入图片描述"></p><h1 id="（6）退出Hbase-shell"><a href="#（6）退出Hbase-shell" class="headerlink" title="（6）退出Hbase shell"></a>（6）退出Hbase shell</h1><p>退出Hbase Shell使用exit命令<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210519182700977.png" alt="在这里插入图片描述"></p><h1 id="（7）查看Hbase集群的状态"><a href="#（7）查看Hbase集群的状态" class="headerlink" title="（7）查看Hbase集群的状态"></a>（7）查看Hbase集群的状态</h1><p>使用status命令，并可以根据summary、simple和detailed这几个关键词来获取不同详细程度的状态信息<img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210519182717781.png" alt="在这里插入图片描述"><br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210519182722905.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xwaDE5MTIwODAxMjI=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第一次考核常见问题及知识点总结</title>
      <link href="/posts/58104/"/>
      <url>/posts/58104/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>第一次考核已经结束，我们也看了大家的作业，总体来说基本大模样都能写出来，但都存在着这样那样的小问题，大家刚接触这也很正常，下面汇集了大家常见的问题，希望能对大家有所帮助</p></blockquote><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><h2 id="1-图片写成绝对路径，导致发来的作业我们打开看不到你的图片"><a href="#1-图片写成绝对路径，导致发来的作业我们打开看不到你的图片" class="headerlink" title="1. 图片写成绝对路径，导致发来的作业我们打开看不到你的图片"></a>1. 图片写成绝对路径，导致发来的作业我们打开看不到你的图片</h2><p>例如路径写成<code>&lt;img src= &quot;C:/Users/test/Documents/images/logo.png&quot;&gt;</code>而发来后我们打开网页，网页会去找我们的C盘下的这个文件，而我们C盘又没有这个文件导致图片不能显示。<br>解决方法：以后图片路径一律写成相对路径，如../images/logo.png这样也方便移动文件后也能正常打开。</p><h2 id="2-文件夹层次较乱"><a href="#2-文件夹层次较乱" class="headerlink" title="2.文件夹层次较乱"></a>2.文件夹层次较乱</h2><p>部分同学所有文件在同一文件夹下，这样就会显着很没有层次，以后文件会很多就会显得杂乱无章<br><strong>解决方法</strong>:图片统一在images(也可以取其他名字，但要能一看就知道是放图片的)文件夹下类似的文件统一在一个文件夹下这种，css放到单独的css文件夹下，下面提供一种方案。<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210408133439800.png" alt="在这里插入图片描述"></p><h2 id="3-缩放后跑到一个方向而不是居中"><a href="#3-缩放后跑到一个方向而不是居中" class="headerlink" title="3. 缩放后跑到一个方向而不是居中"></a>3. 缩放后跑到一个方向而不是居中</h2><p>如何快速缩放：按住Ctrl键滚动鼠标放大缩小<br>例如下面这种，缩小后内容跑到一边，另一边留下大面积空白<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210408133711770.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xwaDE5MTIwODAxMjI=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><strong>解决方法</strong>：<code>margin:auto</code>；让其自动居中，具体实现另行讲解。</p><h2 id="4-字体颜色距离与原图差异较大"><a href="#4-字体颜色距离与原图差异较大" class="headerlink" title="4. 字体颜色距离与原图差异较大"></a>4. 字体颜色距离与原图差异较大</h2><p>如果字体距离与原图不同但界面美观也行，但部分同学因字体颜色距离等因素导致界面看起来不美观。目前大家处于模仿阶段，务必做到与原图一模一样，不要觉得差不多就退而求其次。这是非常严重的问题。<br>解决方法：仔细对比原图，我个人用qq自带截图Ctrl+Alt+A，找到需要的颜色的rgb值，然后使用rgb格式加上颜色，例如color:rgb(123,123,123)<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/202104081341563.png" alt="在这里插入图片描述"><br>双击数值然后按住键盘上的上下可即时调节(在网页上可即时看到效果)</p><h2 id="5-出现横向滚动条了怎么办"><a href="#5-出现横向滚动条了怎么办" class="headerlink" title="5. 出现横向滚动条了怎么办"></a>5. 出现横向滚动条了怎么办</h2><p>看了下很多人出现了这个问题，原因大多是比如你用了太大的宽度让他沾满整个屏幕，如果你用的台式机显示正常，你看着挺好，但是比如我电脑14寸的，宽度总共就1000多px，你来个500不出问题才怪。<br><strong>按住F12选中某个盒子是经常用到的排查错误的方式</strong><br><strong>解决方法</strong>： 按F12然后点击左边的小鼠标（google chrome快捷键Ctrl+Shift+C）放到右面空白的地方看看是哪个div太宽了导致出现滚动条<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210408135216258.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xwaDE5MTIwODAxMjI=,size_16,color_FFFFFF,t_70" alt="!\[!\[\](https://img-blog.csdnimg.cn/20210408135102924.png\](https://img-blog.csdnimg.cn/20210408135134253.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xwaDE5MTIwODAxMjI=,size_16,color_FFFFFF,t_70"></p><p>根本解决方法是<code>margin:auto</code>配合左右浮动+外层用百分比</p><h2 id="6-css代码放到html文件里"><a href="#6-css代码放到html文件里" class="headerlink" title="6.css代码放到html文件里"></a>6.css代码放到html文件里</h2><p>并不是说css和html放一起就是错的，而是如果css代码较多就会显得文章比较乱（假想你要向下一直滑才能看到你的html代码是什么感觉）放一个文件里只适合css代码较少这样比较好维护<br><strong>解决方法</strong>：采用引用外部文件的形式</p><h2 id="7-好多同学都是用table写的"><a href="#7-好多同学都是用table写的" class="headerlink" title="7.好多同学都是用table写的"></a>7.好多同学都是用table写的</h2><p>并不是说用table写是错的，而是table一方面不容易维护，一些框架也都是用div加其他的完成的，日后除后端表格外一般不会用到table<br><strong>解决方法</strong>：强烈建议大家用div写</p><h2 id="8-咨询建议是固定在窗口固定位置的"><a href="#8-咨询建议是固定在窗口固定位置的" class="headerlink" title="8.咨询建议是固定在窗口固定位置的"></a>8.咨询建议是固定在窗口固定位置的</h2><p>部分同学的咨询建议那不会随着页面滚动而改变位置<br><strong>解决方法</strong>：参考下源码中的效果，主要就是<code>position: fixed;</code></p><h2 id="9-部分同学写死宽度"><a href="#9-部分同学写死宽度" class="headerlink" title="9.部分同学写死宽度"></a>9.部分同学写死宽度</h2><p>这里指的是比如你写一个盒子宽1500px,你的电脑比较宽看着没问题，但是放到小点的电脑1500px太宽了就会出现滚动条</p><p><strong>解决方法</strong>：对于较大的宽度用百分比表示(一般在<code>&lt;head&gt;</code>、<code>&lt;footer&gt;</code>这种外层框架才会用到)</p><h1 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h1><h2 id="1-margin-0-auto；配合左右浮动"><a href="#1-margin-0-auto；配合左右浮动" class="headerlink" title="1. margin:0 auto；配合左右浮动"></a>1. margin:0 auto；配合左右浮动</h2><p>红色框的宽度固定假如为1000px;再加个margin: 0 auto; 让红色框水平方向居中；<br>再加个overflow: hidden;清除文档流的浮动，避免红色框以外的元素随着里面元素的浮动<br>里面的两个黑色框宽度固定但不要超过父元素宽度，一个float:left, 一个float:right;<br><strong>如果黑色框里还有这种左右结构，可以继续将其进行拆分</strong><br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210408135827335.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xwaDE5MTIwODAxMjI=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>按照这个方式 布局就能让网页在不同大小的屏幕（电脑屏幕）或不同浏览器上浏览排版不乱</p><h2 id="2-浮动float"><a href="#2-浮动float" class="headerlink" title="2.浮动float"></a>2.浮动float</h2><p>浮动在初学时可能好多锅都是因为没用好浮动，比如怎么盒子高度为0。<br>具体参考CSS浮动：<br><a href="https://link.csdn.net/?target=https://www.w3school.com.cn/css/css_positioning_floating.asp">W3school的css浮动</a></p><h2 id="3-改了代码却不生效"><a href="#3-改了代码却不生效" class="headerlink" title="3.改了代码却不生效"></a>3.改了代码却不生效</h2><p>这种问题可能是代码没写好，但有时代码没什么问题，却还是不生效。这是因为浏览器的缓存机制的问题。浏览器为了节省流量和更快的打开网页，在用户多次刷新时并不会重新刷新所有文件，而只是刷新部分文件，这就导致可能你改动的代码并未被浏览器重新引用。<br>解决方法：清除浏览器数据</p><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210408140008501.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xwaDE5MTIwODAxMjI=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>也可在网页界面按快捷键<strong>Ctrl+F5</strong><br>谷歌浏览器是这样，其他浏览器类似</p><h2 id="4-如何自适应"><a href="#4-如何自适应" class="headerlink" title="4.如何自适应"></a>4.如何自适应</h2><p>我看了下大多数人都没有用到margin:auto,可能你是用的padding-left或margin-left或绝对定位（虽然可以居中,但是麻烦）使得在你自己电脑上看着好像居中了。比如下面这张图:</p><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210408140124790.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xwaDE5MTIwODAxMjI=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>左边的logo部分就用的padding-left:130px;,在你的电脑上看着距离挺合适和原图差不多。</p><p>但是当你缩放时这时logo这部分距离左边仍然是130px,这就会造成整体左移.</p><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210408140138756.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xwaDE5MTIwODAxMjI=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>那如何让它居中呢，这时缩放时你应该让它距左边不能是130px了，而应该是一个更大的值，但是如果你写死宽度，就不能做到然他自动变化，所以就要用到margin:auto.具体怎么用margin:auto参考左右浮动布局讲解或网上自行查找资料（必须学会用居中！！！）</p><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210408140155769.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xwaDE5MTIwODAxMjI=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p>本篇文章并不能包含所有大家遇到的问题，有些问题也需要大家自己去搜索解决。文章为个人经验所写，如有错误，可在评论区留言，祝大家学习愉快。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop MapReduce概述</title>
      <link href="/posts/42300/"/>
      <url>/posts/42300/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>MapReduce是一种并行编程模型，用于大规模数据集的并行运算，将复杂的、运行于大规模集群上的并行计算过程高度抽象到两个函数：Map和Reduce，极大的方便了分布式编程工作，对不会分布式并行编程的人员十分友好。</p><p>MapReduce将复杂的、运行于大规模集群上的并行计算过程高度抽象到两个函数：Map和Reduce，在MapReduce中，一个存储在分布式文件系统中的大规模数据集会被切分成许多独立的数据块，这些数据块可以被多个Map任务并行处理。需要注意的是，适合用MapReduce来处理的数据集需要满足一个前提条件：待处理的数据集可以分解成许多小的数据集，而且每一个数据集都可以完全并行地进行处理。</p><p>MapReduce的一个设计理念是“计算向数据靠拢”，而不是“数据向计算靠拢”，因此，在一个集群中，MapReduce会尽量将Map程序就近的在HDFS数据所在的节点运行，即将计算节点和存储节点放在一起运行，从而减少了节点间的数据移动。</p><h1 id="MapReduce工作流程"><a href="#MapReduce工作流程" class="headerlink" title="MapReduce工作流程"></a>MapReduce工作流程</h1><p>MapReduce的核心思想可以用“分而治之”来形容，即把大量的数据集拆分成多个小的数据块在多台机器上并行处理，以下是MapReduce执行的过程：</p><ul><li>使用InputFormat模块做Map前的预处理，比如验证输入的格式是否符合输入定义，然后将文件切分成逻辑上的多个InputSplit（MapReduce对文件进行处理和运算的输入单位，只是一个逻辑概念，并没有对文件做实际切割，只是记录了要处理的数据的位置和长度）。</li><li>通过RecordReader根据InputSplit中的信息来处理InputSplit中的具体记录，加载数据并转换为适合Map任务读取的键值对，输入给Map任务。</li><li>Map任务根据用户自定义的映射规则，输出一系列的&lt;key,value&gt;作为中间结果。<ul><li>对Map的输出进行一定的分区（Portition），排序(Sort)，合并(Combine)，归并（Merge），得到&lt;key,value-list&gt;形式的中间结果，以使Reduce可以并行的处理Map的结果，从无序的&lt;key,value&gt;到有序的&lt;key,value-list&gt;,这个过程称为Shuffle。</li><li>Reduce以一系列的&lt;key,value-list&gt;中间结果作为输入，执行用户定义的逻辑，输出结果给OutputFormat模块。</li><li>OutputFormat模块验证输出目录是否已经存在及输出结果类型是否符合配置文件中的配置类型，验证通过则输出Reduce的结果到分布式文件系统。</li></ul></li></ul><h1 id="Shuffle过程"><a href="#Shuffle过程" class="headerlink" title="Shuffle过程"></a>Shuffle过程</h1><p>Shuffle是指对Map输出结果进行分区、排序、合并等处理并交给Reduce的过程，分为Map端的Shuffle过程和Reduce端的Shuffle过程。</p><h2 id="Map端的Shuffle过程"><a href="#Map端的Shuffle过程" class="headerlink" title="Map端的Shuffle过程"></a>Map端的Shuffle过程</h2><p>Map端的Shuffle过程包括四个过程：</p><ul><li>输入数据和执行Map任务<br>Map任务接受&lt;key,value&gt;作为输入后，按一定的映射规则转换成一批&lt;key，value&gt;</li><li>写入缓存<br>每个Map任务都会被分配一个缓存，Map的输出结果首先写入缓存，在缓存中积累一定数量的Map输出结果后，在一次性批量写入磁盘，在写入缓存之前，key和value值都会被序列化成字节数组</li><li>溢写（分区、排序和合并）<br>MapReduce的缓存容量有限，当缓存中的Map结果不断增加时，需要启动溢写操作，将缓存中的内容一次性写入磁盘，并清空缓存，不能等到缓存全部沾满后才启动溢写过程，一般会设置一个溢写比例，如0.8，当缓存占用空间达到这个比例时，就启动溢写操作。<br>在溢写到磁盘之前，缓存中的数据需经历一下几个过程：分区、排序、合并（可选）。<br>MapReduce通过Partitioner接口对键值对进行分区，将Map的结果均匀的分配到Reduce任务进行并行处理，MapReduce允许用户通过重载Partitioner接口来自定义分区方式。<br>对于每个分区内的所有键值对，后台线程会根据key对他们进行内存排序。<br>排序结束后，包含一个可选的合并（Combine）操作，只有在用户定义了Combiner函数时，才会进行合并操作，将具有相同key的&lt;key,value&gt;的value求和，以减少键值对的数量。</li><li>文件归并<br>每次溢写操作都会在磁盘中生成一个溢写文件，溢写文件的数量会随着MapReduce任务的执行而越来越多，在Map任务全部结束之前，系统会对所有溢写文件中的数据进行归并，将具有相同key的键值对归并成一个新的键值对，生成一个大的溢写文件。<h2 id="Reduce端的Shuffle过程"><a href="#Reduce端的Shuffle过程" class="headerlink" title="Reduce端的Shuffle过程"></a>Reduce端的Shuffle过程</h2>相对于Map端的Shuffle过程，Reduce端的Shuffle过程更为简单，只需从Map端读取Map结果，并执行归并操作，然后输送给Reduce任务进行处理<br>Reduce端的Shuffle过程包括三个步骤：</li><li>“领取”数据<br>Map端的Shuffle过程结速后，Reduce任务需要把Map的输出结果“领取”（fetch）来存放到自己所在机器的本地磁盘上，在Reduce任务真正开始前，大部分时间都在从Map端“领取”属于自己处理的分区数据。</li><li>归并数据<br>从Map端领回的数据首先被存放在Reduce任务所在机器的缓存中，当缓存被沾满时，数据会被溢写到磁盘中，在溢写过程中会进行与Map端的shuffle过程类似的排序和合并操作。</li><li>把数据输入给Reduce任务<br>磁盘中经过多轮归并后得到若干个大文件，不会继续归并成一个新的大文件，而是直接输入给Reduce任务，以减少磁盘读写开销</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>科学上网教程</title>
      <link href="/posts/45527/"/>
      <url>/posts/45527/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>科学上网：即翻墙访问外网，本教程仅介绍免费翻墙技巧，在速度和流量上有限制，但是不追求YouTube 4K画质够用了，白嫖党的福利，氪金大佬可充钱，这里主要介绍我目前在用的V2ray</p><h2 id="速度截图"><a href="#速度截图" class="headerlink" title="速度截图"></a>速度截图</h2><p>这是YouTube 4K视频的速度，这个速度相当不错了，全程无卡顿，在GitHub下载文件也是相当快，可以满足大部分需求</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/2021040718521668.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xwaDE5MTIwODAxMjI=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="服务器节点"><a href="#服务器节点" class="headerlink" title="服务器节点"></a>服务器节点</h2><p>V2ray主要使用各种服务器节点，有许多经销商，一般都有免费的节点，追求速度的可以氪金</p><p>接下来就是几个现在常用的提供商，大家看那个好用就用那个，一般是一个节点不行了就换一个</p><h3 id="自由人士"><a href="#自由人士" class="headerlink" title="自由人士"></a>自由人士</h3><p>免费节点：</p><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210407185215868.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xwaDE5MTIwODAxMjI=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>注册链接：<a href="http://freeperson.xyz/auth/register" target="_blank" rel="noopener">http://freeperson.xyz/auth/register</a></p><h3 id="CLAPSE"><a href="#CLAPSE" class="headerlink" title="CLAPSE"></a>CLAPSE</h3><p>注册送10G，7天后流量清零，过期后可选择3块或6块一个月的套餐，相对来说比较便宜</p><p>我的已经过期了，就不放截图了</p><p>注册链接：<a href="https://www.clapse.com/" target="_blank" rel="noopener">https://www.clapse.com/</a></p><h3 id="MGNB"><a href="#MGNB" class="headerlink" title="MGNB"></a>MGNB</h3><p>注册送300g，两天后到期，不用代理，续费一月五毛，速度很快</p><p>免费节点：</p><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210407185215843.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xwaDE5MTIwODAxMjI=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>注册链接：<a href="https://mgnb.vip/#/register" target="_blank" rel="noopener">https://mgnb.vip/#/register</a></p><h3 id="小塞-SEBS"><a href="#小塞-SEBS" class="headerlink" title="小塞 SEBS"></a>小塞 SEBS</h3><p>注册送20G,有效期20天</p><p>注册链接：<a href="https://ggboom.site/" target="_blank" rel="noopener">https://ggboom.site/</a></p><h2 id="节点使用教程"><a href="#节点使用教程" class="headerlink" title="节点使用教程"></a>节点使用教程</h2><p>有了服务器节点，怎么用呢，慢慢往下看</p><h3 id="客户端下载"><a href="#客户端下载" class="headerlink" title="客户端下载"></a>客户端下载</h3><p>下载V2ray客户端，解压后找到V2ray.exe双击即可打开代理，建议发送快捷方式到桌面</p><p><a href="http://www.liph.top/upload/files/2021/04/03/123728_3_3.zip" target="_blank" rel="noopener">点我下载客户端</a></p><h3 id="配置节点"><a href="#配置节点" class="headerlink" title="配置节点"></a>配置节点</h3><p>下载好后去复制订阅链接，这里使用自有人士</p><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210407185215774.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xwaDE5MTIwODAxMjI=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>复制订阅链接后粘贴到浏览器网址栏，下载txt文档，Ctrl+A复制txt文档中的内容，打开V2ray程序，右击，选择从剪贴板批量导入URL</p><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210407185215727.png" alt="在这里插入图片描述"></p><p>再次右击V2ray程序，即可选择服务器，选择其中一个即可实现科学上网</p><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210407185215727.png" alt="在这里插入图片描述"></p><h3 id="寻找服务器节点的方法"><a href="#寻找服务器节点的方法" class="headerlink" title="寻找服务器节点的方法"></a>寻找服务器节点的方法</h3><p>以上节点是在YouTube上看到的，类似的还有很多，有需求的可以自己去搜，有很多人专门分享的</p><h3 id="SSR"><a href="#SSR" class="headerlink" title="SSR"></a>SSR</h3><p>ssr俗称小飞机，和V2ray类似，但是V2ray目前比较稳定，这里就不对ssr作介绍了</p><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>很多服务器节点每天签到送流量，大家可以偶尔签到，不然流量可能不够用</p><p>以上教程为电脑端使用，手机端上述节点提供商也有相应程序可以下载，可以使用同样的节点</p><p> 写在最后</p><p>很多服务器节点每天签到送流量，大家可以偶尔签到，不然流量可能不够用</p><p>以上教程为电脑端使用，手机端上述节点提供商也有相应程序可以下载，可以使用同样的节点</p><p>在配置过程中，大家有什么问题可以在评论区留言</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>数据结构——单链表的基本操作</title>
      <link href="/posts/14136/"/>
      <url>/posts/14136/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h2><p>通过该实验，深入理解链表的逻辑结构、物理结构等概念，掌握链表基本操作的编程实现，熟练掌握C语言中指针的操作。</p><h2 id="实验内容"><a href="#实验内容" class="headerlink" title="实验内容"></a>实验内容</h2><p>编程实现链表下教材第二章定义的线性表的基本操作，最好用菜单形式对应各个操作，使其编程一个完整的小软件。</p><p>参考界面：<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20210406232258537.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xwaDE5MTIwODAxMjI=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> ElemType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    ElemType data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;LNode,*LinkList;</span><br><span class="line"><span class="comment">//链表初始化</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">InitList</span><span class="params">(LinkList &amp;L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    L=<span class="keyword">new</span> LNode;</span><br><span class="line">    <span class="keyword">if</span>(!L) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    L-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//销毁链表</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">DestoryList</span><span class="params">(LinkList &amp;L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LinkList p;</span><br><span class="line">    <span class="keyword">while</span>(L)</span><br><span class="line">    &#123;</span><br><span class="line">        p=L;</span><br><span class="line">        L=L-&gt;next;</span><br><span class="line">        <span class="keyword">delete</span> p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//清空单链表</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ClearList</span><span class="params">(LinkList L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LinkList p,q;</span><br><span class="line">    p=L-&gt;next;</span><br><span class="line">    <span class="keyword">while</span>(p)&#123;q=p;<span class="keyword">delete</span> q;p=p-&gt;next;&#125;</span><br><span class="line">    L-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//求单链表长度</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Listlength</span><span class="params">(LinkList L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    LinkList p=L-&gt;next;</span><br><span class="line">    <span class="keyword">while</span>(p)</span><br><span class="line">    &#123;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">        sum++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//判断单链表是否为空</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ListEmpty</span><span class="params">(LinkList L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(L-&gt;next)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取单链表中某个数据元素的内容</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">GetElem</span><span class="params">(LinkList L,<span class="keyword">int</span> i,ElemType &amp;e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LinkList p=L-&gt;next;</span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(p&amp;&amp;j&lt;i)</span><br><span class="line">    &#123;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">        ++j;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!p||j&gt;i)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    e=p-&gt;data;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//查找值为e的数据元素的位置</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">LocateElem</span><span class="params">(LinkList L,ElemType e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LinkList p=L-&gt;next;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(p&amp;&amp;p-&gt;data!=e)</span><br><span class="line">    &#123;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(i&gt;=Listlength(L))</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> i+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//求直接前驱</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">PriorElem</span><span class="params">(LinkList L,ElemType e,ElemType&amp;pre_e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LNode*p=L-&gt;next;</span><br><span class="line">    <span class="keyword">if</span>(e==p-&gt;data)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(p-&gt;next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(p-&gt;next-&gt;data==e)</span><br><span class="line">        &#123;</span><br><span class="line">            pre_e=p-&gt;data;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//求直接后继</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">NextElem</span><span class="params">(LinkList L,ElemType e,ElemType&amp;next_e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LNode*p=L-&gt;next;</span><br><span class="line">    <span class="keyword">while</span>(p)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(p-&gt;data==e&amp;&amp;p-&gt;next)</span><br><span class="line">        &#123;</span><br><span class="line">            next_e=p-&gt;next-&gt;data;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//在单链表中插入数据元素</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ListInsert</span><span class="params">(LinkList&amp;L,<span class="keyword">int</span> i,ElemType e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LinkList p=L;</span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(p&amp;&amp;(j&lt;i<span class="number">-1</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">        ++j;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!p||j&gt;i<span class="number">-1</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    LinkList s=<span class="keyword">new</span> LNode;</span><br><span class="line">    s-&gt;data=e;</span><br><span class="line">    s-&gt;next=p-&gt;next;</span><br><span class="line">    p-&gt;next=s;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//删除单链表中第i个元素，返回第i个元素的值</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ListDelete</span><span class="params">(LinkList &amp;L,<span class="keyword">int</span> i,ElemType&amp;e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LinkList p=L;</span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>((p-&gt;next)&amp;&amp;(j&lt;i<span class="number">-1</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">        ++j;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!(p-&gt;next)||(j&gt;i<span class="number">-1</span>)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    LinkList q=p-&gt;next;</span><br><span class="line">    e=q-&gt;data;</span><br><span class="line">    p-&gt;next=q-&gt;next;</span><br><span class="line">    <span class="keyword">delete</span> q;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出链表元素</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LinkPrint</span><span class="params">(LinkList &amp;L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LinkList p=L-&gt;next;</span><br><span class="line">    <span class="keyword">while</span>(p)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;p-&gt;data&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//前插法创建单链表</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreateList_H</span><span class="params">(LinkList &amp;L,<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    L=<span class="keyword">new</span> LNode;</span><br><span class="line">    L-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入要插入的元素:"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        LNode*p=<span class="keyword">new</span> LNode;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;p-&gt;data;</span><br><span class="line">        p-&gt;next=L-&gt;next;</span><br><span class="line">        L-&gt;next=p;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//后插法创建单链表</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreateList_R</span><span class="params">(LinkList&amp;L,<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    L=<span class="keyword">new</span> LNode;</span><br><span class="line">    L-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">    LNode*r=L;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        LinkList p=<span class="keyword">new</span> LNode;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;p-&gt;data;</span><br><span class="line">        p-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">        r-&gt;next=p;</span><br><span class="line">        r=p;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//判断链表是否为空</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">IsEmpty</span><span class="params">(LinkList L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(L-&gt;next)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//链表逆转</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ReverseList</span><span class="params">(LinkList&amp;L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(L==<span class="literal">NULL</span>||L-&gt;next==<span class="literal">NULL</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    LinkList pRev=<span class="literal">NULL</span>;</span><br><span class="line">    LinkList pCur=L-&gt;next;</span><br><span class="line">    <span class="keyword">while</span>(pCur!=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        LinkList temp=pCur;</span><br><span class="line">        pCur=pCur-&gt;next;</span><br><span class="line">        temp-&gt;next=pRev;</span><br><span class="line">        pRev=temp;</span><br><span class="line">    &#125;</span><br><span class="line">    L-&gt;next=pRev;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PrintTips</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"可执行的操作有："</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"********************"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"1.初始化或重置列表"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"2.销毁链表"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"3.链表中数据元素的个数"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"4.所指位序的元素值"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"5.链表已存在元素的位序"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"6.请输入元素，求直接前驱"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"7.请输入元素，求直接后继"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"8.在第i个位置插入元素"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"9.删除第i个元素"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"10.输出所输入的链表元素"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"11.初始化并输入链表元素"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"12.退出"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"13.判断单链表是否为空"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"14.链表逆转"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"********************"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入你的选择："</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//判断输入是否合法</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">IsInvalid</span><span class="params">(LinkList L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(L==<span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"链表未初始化！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> k,s,i;</span><br><span class="line">    ElemType e,res_e;</span><br><span class="line">    LNode *p;</span><br><span class="line">    LinkList L;</span><br><span class="line">    PrintTips();</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;k)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">switch</span>(k)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            s=InitList(L);</span><br><span class="line">            <span class="keyword">if</span>(s==<span class="number">1</span>)</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"初始化成功或重置成功！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            s=DestoryList(L);</span><br><span class="line">            <span class="keyword">if</span>(s==<span class="number">1</span>)</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"销毁成功！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            <span class="keyword">if</span>(IsInvalid(L)) <span class="keyword">break</span>;</span><br><span class="line">            s=Listlength(L);</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"链表中数据元素个数为："</span>&lt;&lt;s&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            <span class="keyword">if</span>(IsInvalid(L)) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span>(!L-&gt;next)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"链表为空！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入序号："</span>;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;i;</span><br><span class="line">            <span class="keyword">if</span>(!GetElem(L,i,e))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"该位置超出链表范围！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"下标"</span>&lt;&lt;i&lt;&lt;<span class="string">"处元素值为："</span>&lt;&lt;e&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            <span class="keyword">if</span>(IsInvalid(L)) <span class="keyword">break</span>;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入要查找的元素："</span>;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;e;</span><br><span class="line">            s=LocateElem(L,e);</span><br><span class="line">            <span class="keyword">if</span>(!s)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"不存在"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"值为"</span>&lt;&lt;e&lt;&lt;<span class="string">"的元素下标为："</span>&lt;&lt;s&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            <span class="keyword">if</span>(IsInvalid(L)) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span>(!L-&gt;next)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"链表为空！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入一个元素："</span>;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;e;</span><br><span class="line">            <span class="keyword">if</span>(!PriorElem(L,e,res_e))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"查找失败！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"该元素的前驱为："</span>&lt;&lt;res_e&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            <span class="keyword">if</span>(IsInvalid(L)) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span>(!L-&gt;next)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"链表为空！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入一个元素："</span>;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;e;</span><br><span class="line">            <span class="keyword">if</span>(!NextElem(L,e,res_e))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"查找失败！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"该元素的后继为："</span>&lt;&lt;res_e&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">            <span class="keyword">if</span>(IsInvalid(L)) <span class="keyword">break</span>;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入要插入的位置和元素："</span>;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;i&gt;&gt;e;</span><br><span class="line">            s=ListInsert(L,i,e);</span><br><span class="line">            <span class="keyword">if</span>(s)</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"插入成功！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"插入失败！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">            <span class="keyword">if</span>(IsInvalid(L)) <span class="keyword">break</span>;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入要删除的位置："</span>;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;i;</span><br><span class="line">            s=ListDelete(L,i,e);</span><br><span class="line">            <span class="keyword">if</span>(s)</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"删除成功！,该位置值为："</span>&lt;&lt;e&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"删除失败！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">            <span class="keyword">if</span>(IsInvalid(L)) <span class="keyword">break</span>;</span><br><span class="line">            LinkPrint(L);</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入要插入链表的元素个数："</span>;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line">            CreateList_R(L,s);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">13</span>:</span><br><span class="line">            <span class="keyword">if</span>(IsInvalid(L)) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span>(IsEmpty(L))</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"链表为空！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"非空！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">14</span>:</span><br><span class="line">            <span class="keyword">if</span>(IsInvalid(L)) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span>(ReverseList(L))</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"链表逆转成功！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"操作失败！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"操作有误！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入你的选择："</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>sublime 、 vscode 快捷生成HTML代码</title>
      <link href="/posts/3541/"/>
      <url>/posts/3541/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>文章转载自<a href="https://www.cnblogs.com/suitongyu/p/12043791.html" target="_blank" rel="noopener">https://www.cnblogs.com/suitongyu/p/12043791.html</a></p></blockquote><h2 id="基本html结构"><a href="#基本html结构" class="headerlink" title="基本html结构"></a>基本html结构</h2><p>输入 <strong>!+Enter</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="生成div加类名的快捷键"><a href="#生成div加类名的快捷键" class="headerlink" title="生成div加类名的快捷键"></a>生成div加类名的快捷键</h2><p>输入 div.list&gt;div.item_$*6</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"list"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item_1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item_2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item_3"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item_4"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item_5"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item_6"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="带类名的div"><a href="#带类名的div" class="headerlink" title="带类名的div"></a>带类名的div</h2><p>输入 div.wrapper</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="带id的div"><a href="#带id的div" class="headerlink" title="带id的div"></a>带id的div</h2><p>div#wrapper</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"wrapper"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="属性"><a href="#属性" class="headerlink" title="属性 []"></a>属性 []</h2><p>span[title=”test”]</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">title</span>=<span class="string">"test"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="后代-gt"><a href="#后代-gt" class="headerlink" title="后代 &gt;"></a>后代 &gt;</h2><p>输入div&gt;span&gt;a</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="兄弟"><a href="#兄弟" class="headerlink" title="兄弟 +"></a>兄弟 +</h2><p>div+p+span</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="上级"><a href="#上级" class="headerlink" title="上级 ^"></a>上级 ^</h2><p>div&gt;span^i</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="乘法"><a href="#乘法" class="headerlink" title="乘法 *"></a>乘法 *</h2><p>ul&gt;li*2</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="文本"><a href="#文本" class="headerlink" title="文本 {}"></a>文本 {}</h2><p>div&gt;span{this is test}</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>this is test<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="自增符"><a href="#自增符" class="headerlink" title="自增符 $"></a>自增符 $</h2><p>ul&gt;li.list_${list $}*3</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list_1"</span>&gt;</span>list 1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list_2"</span>&gt;</span>list 2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list_3"</span>&gt;</span>list 3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p>ul&gt;li.item$@3*3 “@3” （表示从3开始计数）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item3"</span>&gt;</span>list 1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item4"</span>&gt;</span>list 2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item5"</span>&gt;</span>list 3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="隐式转换"><a href="#隐式转换" class="headerlink" title="隐式转换"></a>隐式转换</h2><p>.class</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"class"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>ul&gt;.item</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p>table&gt;.row&gt;.col</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"col"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>C++构建自己的计算机 ，C++机器语言程序</title>
      <link href="/posts/1290/"/>
      <url>/posts/1290/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>题目出自《c++大学教程第五版》<br>需要建立一个称为Simpletron的计算机，其中所有的信息都是由带符号的4位十进制数组成的“字”来助理，前两位是操作码，之后的两位是内存位置，需要将各操作码的功能实现，话不多说，直接上代码</p><h2 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pusherror</span><span class="params">()</span></span>;<span class="comment">//抛出错误</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">halt</span><span class="params">()</span></span>;<span class="comment">//寄存器与内存信息</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">start</span><span class="params">()</span></span>;<span class="comment">//输出程序启动信息</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">action</span><span class="params">(<span class="keyword">int</span>,<span class="keyword">int</span>,<span class="keyword">int</span>)</span></span>;<span class="comment">//执行各指令</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">()</span></span>;<span class="comment">//输入指令字并提取信息</span></span><br><span class="line"><span class="keyword">int</span> memory[<span class="number">100</span>];<span class="comment">//内存</span></span><br><span class="line"><span class="keyword">int</span> acc=<span class="number">0</span>;<span class="comment">//累加寄存器，初始化为0</span></span><br><span class="line"><span class="keyword">int</span> counter;<span class="comment">//下一个内存位置</span></span><br><span class="line"><span class="keyword">int</span> operand;<span class="comment">//内存位置</span></span><br><span class="line"><span class="keyword">int</span> operationCode;<span class="comment">//指令</span></span><br><span class="line"><span class="built_in">string</span> instructionRegister=<span class="string">"+0000"</span>;<span class="comment">//命令字</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//主函数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    start();</span><br><span class="line">    input();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">start</span><span class="params">()</span> <span class="comment">//输出开机内容</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"*** Welcome to Simpletron! ***"</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">"*** Please enter your program one instruction ***"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"*** (or data word) at a time.I will type the ***"</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">"*** location number and a question mark(? ). ***&lt;&lt;endl"</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"*** You then type the word for that location. ***"</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">"*** Type the sentinel - 99999 to stop entering ***"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"*** your program. ***"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pusherror</span><span class="params">()</span><span class="comment">//打印错误信息</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"*** Attempt to divide by zero ***"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"*** Simpletron execution abnormally terminated ***"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    halt();</span><br><span class="line">    input();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">halt</span><span class="params">()</span><span class="comment">//输出内存的全部内容</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> sp = <span class="string">"        "</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"REGISTERS"</span> &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//输出各寄存器中的值</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; resetiosflags(ios::right);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; setiosflags(ios::left) &lt;&lt; setw(<span class="number">20</span>) &lt;&lt; <span class="string">"accumlator"</span> &lt;&lt; setiosflags(ios::right) &lt;&lt; setw(<span class="number">6</span>) &lt;&lt; <span class="string">"+"</span> &lt;&lt; setw(<span class="number">4</span>) &lt;&lt; setfill(<span class="string">'0'</span>) &lt;&lt; acc &lt;&lt; setfill(<span class="string">' '</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; resetiosflags(ios::right) &lt;&lt; setw(<span class="number">20</span>) &lt;&lt; <span class="string">"counter"</span> &lt;&lt; setiosflags(ios::right) &lt;&lt; sp &lt;&lt; setw(<span class="number">2</span>) &lt;&lt; setfill(<span class="string">'0'</span>) &lt;&lt; counter &lt;&lt; setfill(<span class="string">' '</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; resetiosflags(ios::right) &lt;&lt; setw(<span class="number">20</span>) &lt;&lt; <span class="string">"instructionRegister"</span> &lt;&lt; setiosflags(ios::right) &lt;&lt; setw(<span class="number">10</span>) &lt;&lt; instructionRegister &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; resetiosflags(ios::right) &lt;&lt; setw(<span class="number">20</span>) &lt;&lt; <span class="string">"operationCode"</span> &lt;&lt; setiosflags(ios::right) &lt;&lt; sp &lt;&lt; setw(<span class="number">2</span>) &lt;&lt; setfill(<span class="string">'0'</span>) &lt;&lt; operationCode &lt;&lt; setfill(<span class="string">' '</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; resetiosflags(ios::right) &lt;&lt; setw(<span class="number">20</span>) &lt;&lt; <span class="string">"operand"</span> &lt;&lt; setiosflags(ios::right) &lt;&lt; sp &lt;&lt; setw(<span class="number">2</span>) &lt;&lt; setfill(<span class="string">'0'</span>) &lt;&lt; operand &lt;&lt; setfill(<span class="string">' '</span>) &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"MEMORY:"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"  "</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) <span class="comment">//输出内存中内容</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; setiosflags(ios::right) &lt;&lt; setw(<span class="number">6</span>) &lt;&lt; i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">" 0"</span>;</span><br><span class="line">    <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (k &gt; <span class="number">0</span> &amp;&amp; k % <span class="number">10</span> == <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; setw(<span class="number">2</span>) &lt;&lt; setfill(<span class="string">' '</span>) &lt;&lt; k;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">" +"</span> &lt;&lt; setw(<span class="number">4</span>) &lt;&lt; setfill(<span class="string">'0'</span>) &lt;&lt; memory[i];</span><br><span class="line">        k++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    input();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">action</span><span class="params">(<span class="keyword">int</span> op, <span class="keyword">int</span> p, <span class="keyword">int</span> n)</span> <span class="comment">//根据指令进行对应操作</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    counter = p;</span><br><span class="line">    operationCode = op;</span><br><span class="line">    operand = p;</span><br><span class="line">    <span class="keyword">if</span> (n &lt; <span class="number">-9999</span> || n&gt;<span class="number">9999</span>)</span><br><span class="line">        pusherror();</span><br><span class="line">    <span class="keyword">switch</span> (op)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">10</span>: <span class="comment">//从键盘中读入值到内存中指定位置</span></span><br><span class="line">        memory[p] = n;</span><br><span class="line">        input();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">11</span>: <span class="comment">//输出内存中指定位置的值</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; memory[p] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        input();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">20</span>: <span class="comment">//将内存中指定位置的值载入累加器</span></span><br><span class="line">        acc = memory[p];</span><br><span class="line">        input();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">21</span>: <span class="comment">//将累加器中的值存储在内存中指定位置</span></span><br><span class="line">        memory[p] = acc;</span><br><span class="line">        input();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">30</span>: <span class="comment">//累加器加值</span></span><br><span class="line">        acc += memory[p];</span><br><span class="line">        input();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">31</span>: <span class="comment">//累加器减值</span></span><br><span class="line">        acc -= memory[p];</span><br><span class="line">        input();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">32</span>: <span class="comment">//累加器除值</span></span><br><span class="line">        <span class="keyword">if</span> (memory[p] == <span class="number">0</span>)</span><br><span class="line">            pusherror();</span><br><span class="line">        acc /= memory[p];</span><br><span class="line">        input();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">33</span>: <span class="comment">//累加器乘值</span></span><br><span class="line">        acc *= memory[p];</span><br><span class="line">        input();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">40</span>: <span class="comment">//转移到内存中特定位置</span></span><br><span class="line">        memory[p] = acc;</span><br><span class="line">        counter = operand;</span><br><span class="line">        input();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">41</span>: <span class="comment">//累加器如为负，转移至内存</span></span><br><span class="line">        <span class="keyword">if</span> (acc &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            memory[p] = acc;</span><br><span class="line">            acc = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        input();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">42</span>: <span class="comment">//累加器如为零，转移至内存</span></span><br><span class="line">        <span class="keyword">if</span> (acc == <span class="number">0</span>) &#123;</span><br><span class="line">            memory[p] = acc;</span><br><span class="line">            acc = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        input();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:<span class="comment">//结束程序</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"你的输入有误，请重新输入！"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        input();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">()</span> <span class="comment">//输入并提取有效信息</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"? "</span>;</span><br><span class="line">    <span class="built_in">string</span> in;</span><br><span class="line">    getline(<span class="built_in">cin</span>, in);</span><br><span class="line">    <span class="keyword">if</span> (in.compare(<span class="string">"halt"</span>) != <span class="number">0</span>)</span><br><span class="line">        instructionRegister.assign(in);</span><br><span class="line">    <span class="built_in">string</span>::size_type k = in.find(<span class="string">'+'</span>);<span class="comment">//查找输入项中的“+”号，判断输入是否符合语法</span></span><br><span class="line">    <span class="built_in">string</span>::size_type l = in.find(<span class="string">"halt"</span>);</span><br><span class="line">    <span class="keyword">if</span> (l != <span class="built_in">string</span>::npos)</span><br><span class="line">        halt();</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (k == <span class="built_in">string</span>::npos) &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"你的输入有误!请重新输入"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        input();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">string</span> order = in.substr(<span class="number">1</span>, <span class="number">2</span>);<span class="comment">//order是输入项中所含指令</span></span><br><span class="line">    <span class="built_in">string</span> x, n;</span><br><span class="line">    x = in.substr(<span class="number">3</span>, <span class="number">2</span>);<span class="comment">//x为储存位置</span></span><br><span class="line">    <span class="keyword">if</span> (in.length() &gt; <span class="number">5</span>)<span class="comment">//获取操作数</span></span><br><span class="line">        n = in.substr(<span class="number">5</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        n = <span class="string">"0"</span>;</span><br><span class="line">    <span class="keyword">int</span> d = stoi(n);<span class="comment">//将n,order转化为整数</span></span><br><span class="line">    <span class="keyword">int</span> c = stoi(x);<span class="comment">//将内存位置转化为整数存储在count中</span></span><br><span class="line">    <span class="keyword">int</span> iorder = stoi(order);</span><br><span class="line">    <span class="keyword">if</span> (c &lt; <span class="number">0</span> || c&gt;<span class="number">99</span>)</span><br><span class="line">        pusherror();</span><br><span class="line">    <span class="keyword">if</span> (iorder == <span class="number">43</span>) &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"*** Program end. ***"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    action(iorder, c, d);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>题目算法难度不大，需要多注意细节，不要掉坑哦</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>107网站工作室简介</title>
      <link href="/posts/43173/"/>
      <url>/posts/43173/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="1-实验室是干什么的？？"><a href="#1-实验室是干什么的？？" class="headerlink" title="1.实验室是干什么的？？"></a>1.实验室是干什么的？？</h1><p>简单来说就是写网站的，学院官网和其他部分学院官网均出自107网站工作室。</p><h1 id="2-学习内容难不难，我是小白怎么办？？"><a href="#2-学习内容难不难，我是小白怎么办？？" class="headerlink" title="2.学习内容难不难，我是小白怎么办？？"></a>2.学习内容难不难，我是小白怎么办？？</h1><p>我们实验室招的就是小白，我们会给大家发些学习视频等资源，只要大家认真观看并付诸行动，脱离小白不是梦。</p><h1 id="3-进实验室我能得到些什么？？"><a href="#3-进实验室我能得到些什么？？" class="headerlink" title="3.进实验室我能得到些什么？？"></a>3.进实验室我能得到些什么？？</h1><ul><li>平常不仅会教大家网站方面的技能也会在电脑使用技巧等方面竭力帮助大家。于本人而言，这是我对计算机的一个启蒙。<ul><li>写网站可培养逻辑能力，网站文件的结构布局和大量代码的编写对日后专业课的学习非常有帮助。</li><li>赚点外快，努力点挣个学费完全没问题。</li><li>进实验室能有自己的专属座位，实验室在学院202，有空调，不用再去图书馆占位了。</li><li>每年实验室负责人可获得360免简历筛选直接面试的资格。</li></ul></li></ul><h1 id="4-寄语"><a href="#4-寄语" class="headerlink" title="4.寄语"></a>4.寄语</h1><p>无论大家是选择107实验室还是其他实验室，一定要选择一个实验室并认真学习，差距往往就是不经意间拉开的。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
